server.port=8788

# 配置MongoDB
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27018
spring.data.mongodb.database=demo_vue
#spring.data.mongodb.username=nexus
#spring.data.mongodb.password=nexus

# 配置数据源
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/demo-vue?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=root

#连接池配置
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
# 最大连接池数量
spring.datasource.druid.max-active=100
# 最小连接池数量
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 是否缓存preparedStatement，也就是PSCache。
spring.datasource.druid.pool-prepared-statements=true
# 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
# 用来检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。
spring.datasource.druid.validation-query=SELECT 'x'
# 单位：秒，检测连接是否有效的超时时间。
spring.datasource.druid.validation-query-timeout=60000
# 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-borrow=false
# 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
spring.datasource.druid.test-on-return=false
# 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=100000

###监控配置 begin###
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled= true
spring.datasource.druid.stat-view-servlet.url-pattern= /druid/*
# 禁用HTML页面上的“Reset All”功能
spring.datasource.druid.stat-view-servlet.reset-enable= false
# 用户名
spring.datasource.druid.stat-view-servlet.login-username= admin
# 密码
spring.datasource.druid.stat-view-servlet.login-password= admin
# IP白名单(没有配置或者为空，则允许所有访问)
spring.datasource.druid.stat-view-servlet.allow= 127.0.0.1
###监控配置 end###

# 配置StatFilter
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=5000

# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false
#配置druid日志
# debug模式可以显示 sql 语句
logging.level.druid.sql.Statement=debug
spring.datasource.druid.filter.slf4j.enabled=true
spring.datasource.druid.filter.log4j.statement-executable-sql-log-enable=true

# Redis数据库索引（默认为0）
spring.redis.database=0
# Redis服务器地址
spring.redis.host=localhost
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-idle=8
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=5000

#spring.boot.admin.client.url=http://localhost:8900
#spring.boot.admin.client.username=admin
#spring.boot.admin.client.password=admin
#management.endpoints.web.exposure.include=*

#结合springboot admin使用
logging.file=/Users/tw0519/IdeaProjects/opentracing/demo-vue/tmp/logs/demo-vue/log-all.log
logging.pattern.file=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID}){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx


#using元数据
spring.boot.admin.client.instance.metadata.tags.environment =test

#using info端点
info.tags.environment =test

jaeger.host=http://www.jaeger.com

springdoc.swagger-ui.path=/swagger-ui.html
#访问swagger ui
#http://localhost:8788/swagger-ui/index.html?url=/v3/api-docs